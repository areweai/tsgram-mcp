services:
  # Signal CLI REST API for Signal messaging
  signal-cli-rest-api:
    image: bbernhard/signal-cli-rest-api:latest
    container_name: signal-cli-rest-api
    ports:
      - "8080:8080"
    environment:
      - MODE=json-rpc
    volumes:
      - signal-cli-config:/home/.local/share/signal-cli
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - hermes-network

  # Hermes MCP Server with full capabilities
  hermes-mcp:
    build:
      context: .
      dockerfile: Dockerfile.hermes
    container_name: hermes-mcp-server
    ports:
      - "4040:4040"
    environment:
      - NODE_ENV=production
      - MCP_SERVER_PORT=4040
      - MCP_SERVER_HOST=0.0.0.0
      - MCP_SERVER_NAME=hermes-mcp-docker
      - SIGNAL_REST_API_URL=http://signal-cli-rest-api:8080
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - DEFAULT_MODEL=openrouter
      - LOG_LEVEL=info
    volumes:
      - ./.env:/app/.env:ro
    depends_on:
      signal-cli-rest-api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "health.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - hermes-network

volumes:
  signal-cli-config:

networks:
  hermes-network:
    driver: bridge